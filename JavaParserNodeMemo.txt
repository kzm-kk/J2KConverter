Node
┣━ArrayCreationLevel(配列の次元)
┣━CatchClause(try-catch-finallyのcatch)
┣━CompilationUnit(一番最初のやつ)
┣━ImportDeclaration(import宣言)
┣━MemberValuePair(アノテーションの値代入のうち、assignのような形式を取るもの)
┣━ModuleDeclaration
┣━Name
┣━PackageDeclaration(パッケージ宣言)
┣━Parameter(パラメータ、仮引数)
┣━SimpleName(クラスや変数、メソッドとかの予約語以外の名前)
┣━VariableDeclarator(変数宣言の、修飾子や型を除いた変数部分)
┃　
┣━BodyDeclaration
┃　┣━AnnotationMemberDeclaration(アノテーションの持つ要素の宣言)
┃　┣━EnumConstantDeclaration(列挙型の要素1つ1つ)
┃　┣━FieldDeclaration(フィールド宣言)
┃　┣━InitializerDeclaration(初期化子)
┃　┣━CallableDeclaration
┃　┃　┣━ConstructorDeclaration(コンストラクタ宣言)
┃　┃　┗━MethodDeclaration(メソッド宣言)
┃　┗━TypeDeclaration
┃　　　┣━AnnotationDeclaration(アノテーション宣言)
┃　　　┣━ClassOrInterfaceDeclaration(クラス宣言)
┃　　　┗━EnumDeclaration(列挙型宣言)
┃　
┣━Comment
┃　┣━BlockComment
┃　┣━JavadocComment
┃　┗━LineComment
┃　
┣━Expression
┃　┣━ArrayAccessExpr(配列アクセス)
┃　┣━ArrayCreationExpr(配列の初期化(要素なし))
┃　┣━ArrayInitializerExpr(配列の初期化(要素あり))
┃　┣━AssignExpr(代入記述)
┃　┣━BinaryExpr(演算・算術記号の入った記述)
┃　┣━CastExpr(キャスト記述)
┃　┣━ClassExpr
┃　┣━ConditionalExpr(三項演算子)
┃　┣━EnclosedExpr(かっこ)
┃　┣━FieldAccessExpr(フィールドアクセス記述)
┃　┣━InstanceOfExpr(instanceofの記述)
┃　┣━LambdaExpr(ラムダ式)
┃　┣━MethodCallExpr(メソッド呼び出し)
┃　┣━MethodReferenceExpr
┃　┣━NameExpr
┃　┣━ObjectCreationExpr(インスタンス生成)
┃　┣━SuperExpr(Fieldとかの呼び出しのsuperの部分)
┃　┣━ThisExpr(Fieldとかの呼び出しのthisの部分)
┃　┣━TypeExpr
┃　┣━UnaryExpr(インクリメントやデクリメント)
┃　┣━VariableDeclarationExpr(ローカルな変数宣言)
┃　┣━AnnotationExpr
┃　┃　┣━MarkerAnnotationExpr(要素なしアノテーション)
┃　┃　┣━NormalAnnotationExpr(要素一つ以上で、代入式のような形式で与えられるもの)
┃　┃　┗━SingleMemberAnnotationExpr(要素一つで、代入される値だけ書かれたもの)
┃　┗━LiteralExpr(様々な値)
┃　　　┣━BooleanLiteralExpr
┃　　　┣━NullLiteralExpr
┃　　　┗━LiteralStringValueExpr
┃　　　　　┣━CharLiteralExpr
┃　　　　　┣━DoubleLiteralExpr
┃　　　　　┣━IntegerLiteralExpr
┃　　　　　┣━LongLiteralExpr
┃　　　　　┗━StringLiteralExpr
┃　
┣━ModuleStmt
┃　┣━ModuleExportsStmt
┃　┣━ModuleOpensStmt
┃　┣━ModuleProvidesStmt
┃　┣━ModuleRequiresStmt
┃　┗━ModuleUsesStmt
┃　
┣━Statement
┃　┣━AssertStmt(assert文)
┃　┣━BlockStmt(ブロック文の枠のとこ)
┃　┣━BreakStmt(breakの記述)
┃　┣━ContinueStmt(continueの記述)
┃　┣━DoStmt(do-while文)
┃　┣━EmptyStmt(if文とかで何も書いてない時)
┃　┣━ExplicitConstructorInvocationStmt(明示的コンストラクタ呼び出し)
┃　┣━ExpressionStmt(定義以外の様々な表現)
┃　┣━ForeachStmt(拡張for文)
┃　┣━ForStmt(for文)
┃　┣━IfStmt(if文)
┃　┣━LabeledStmt(ラベル)
┃　┣━LocalClassDeclarationStmt(ローカルクラス宣言)
┃　┣━ReturnStmt(returnの記述)
┃　┣━SwitchEntryStmt(switch文の一つ一つのラベル)
┃　┣━SwitchStmt(switch文自体)
┃　┣━SynchronizedStmt(Synchronizedブロック)
┃　┣━ThrowStmt(throwの記述)
┃　┣━TryStmt(try-catch-finally)
┃　┣━UnparsableStmt
┃　┗━WhileStmt(while文)
┃　
┗━Type
　┣━IntersectionType
　┣━PrimitiveType(プリミティブ型、型データのノードを取るときに遭遇)
　┣━UnionType(catchで例外処理をするときの例外のやつ)
　┣━UnknownType
　┣━VoidType(voidのこと)
　┣━WildcardType(ワイルドカード)
　┗━ReferenceType
　　　┣━ArrayType(配列型、型データのノードを取る時に遭遇)
　　　┣━ClassOrInterfaceType(参照型の大部分これ)
　　　┗━TypeParameter